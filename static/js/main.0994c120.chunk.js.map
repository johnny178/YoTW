{"version":3,"sources":["api.js","constants/filterData.js","constants/pageData.js","hooks/useHttp.js","components/FilterBtn/styles.js","components/FilterBtn/index.js","components/ScenicSpotsSection/styles.js","components/ScenicSpotsSection/index.js","components/HotelSection/styles.js","components/HotelSection/index.js","components/ActivitiesSection/styles.js","components/ActivitiesSection/index.js","components/RestaurantSection/styles.js","components/RestaurantSection/index.js","components/NavigationBar/styles.js","components/NavigationBar/index.js","components/SelectFilter/styles.js","components/Layout/styles.js","components/SelectFilter/index.js","components/ResultItem/style.js","components/ResultItem/index.js","containers/Activity.js","containers/Hotels.js","containers/Restaurant.js","containers/ScenicSpots.js","App.js","global-styles.js","index.js"],"names":["getAuthorizationHeader","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","getHMAC","getScenicSpots","axios","create","baseURL","headers","getHotels","getActivities","getRestaurant","getAllScenicSpots","searchParam","get","getSpecificScenicSpots","area","getAllHotels","getSpecificHotels","getAllActivities","getSpecificActivities","getAllRestaurant","getSpecificRestaurant","countryDic","arrCountryName","arrRegions","regionTaiwan","PAGE_NUM","useHttp","query","filterData","pageNumber","callAPI","a","useState","loading","setLoading","error","setError","data","setData","hasMore","setHasMore","useEffect","updateData","resp","prevData","length","delay","setTimeout","clearTimeout","Button","styled","button","isActive","FilterBtn","currentItem","setFilterData","onClick","e","select","target","innerText","clickHandler","Container","div","FilterCont","FilterBtnCont","Searchbar","input","GridCont","ScenicSpotsSection","countrySelect","setCountrySelect","regionSelect","setRegionSelect","searchValue","setSearchValue","setPageNumber","setFilterName","name","slice","map","region","index","filterName","URLSearchParams","toString","scenicSpots","observer","useRef","lastScenicSpotsElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","type","value","onChange","handleSearch","regionSelected","selectRegion","item","countrySelected","Picture","PictureUrl1","includes","Name","ref","FilterForm","form","Select","Option","option","HotelSection","hotels","lastHotelsElementRef","handleFilter","ActivitiesSection","activities","lastActivitiesElementRef","RestaurantSection","restaurant","lastRestaurantElementRef","Header","header","Logo","NavLink","NavBtnCont","img","NavBtn","activeclassname","NavigationBar","to","SelectBtn","Menu","DropdownItem","SelectFilter","isOpen","setIsOpen","prevIsOpen","selectedItem","Item","Link","Image","DetailCont","h1","Description","p","ResultItem","React","forwardRef","props","description","DescriptionDetail","ID","src","alt","PictureDescription1","replaceAll","displayName","Activity","Hotels","Restaurant","ScenicSpots","App","path","element","GlobalStyles","createGlobalStyle","ResetStyle","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.0994c120.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport jsSHA from 'jssha';\r\n\r\nconst getAuthorizationHeader = () => {\r\n  //  填入自己 ID、KEY 開始\r\n  let AppID = '79b1459ffeca4aabadd35e191c8fed59';\r\n  let AppKey = 'zvSZkHtUt4JieFWkdnOyW4iGtt4';\r\n  //  填入自己 ID、KEY 結束\r\n  let GMTString = new Date().toGMTString();\r\n  let ShaObj = new jsSHA('SHA-1', 'TEXT');\r\n  ShaObj.setHMACKey(AppKey, 'TEXT');\r\n  ShaObj.update('x-date: ' + GMTString);\r\n  let HMAC = ShaObj.getHMAC('B64');\r\n  // eslint-disable-next-line no-useless-escape\r\n  let Authorization = 'hmac username=\\\"' + AppID + '\\\", algorithm=\\\"hmac-sha1\\\", headers=\\\"x-date\\\", signature=\\\"' + HMAC + '\\\"';\r\n  return { 'Authorization': Authorization, 'X-Date': GMTString };\r\n};\r\n\r\n//景點相關\r\nconst getScenicSpots = axios.create({\r\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot',\r\n  headers: getAuthorizationHeader(),\r\n});\r\n\r\n//旅宿相關\r\nconst getHotels = axios.create({\r\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Tourism/Hotel',\r\n  headers: getAuthorizationHeader(),\r\n});\r\n\r\n//活動相關\r\nconst getActivities = axios.create({\r\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Tourism/Activity',\r\n  headers: getAuthorizationHeader(),\r\n});\r\n\r\n//餐飲相關\r\nconst getRestaurant = axios.create({\r\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Tourism/Restaurant',\r\n  headers: getAuthorizationHeader(),\r\n});\r\n\r\n\r\n//景點相關\r\nexport const getAllScenicSpots = searchParam => getScenicSpots.get(searchParam ? `?${searchParam}` : '');\r\nexport const getSpecificScenicSpots = (area, searchParam = '') => getScenicSpots.get(`/${area}?${searchParam}`);\r\n\r\n//旅宿相關\r\nexport const getAllHotels = searchParam => getHotels.get(searchParam ? `?${searchParam}` : '');\r\nexport const getSpecificHotels = (area, searchParam = '') => getHotels.get(`/${area}?${searchParam}`);\r\n\r\n//旅宿相關\r\nexport const getAllActivities = searchParam => getActivities.get(searchParam ? `?${searchParam}` : '');\r\nexport const getSpecificActivities = (area, searchParam = '') => getActivities.get(`/${area}?${searchParam}`);\r\n\r\n//餐飲相關\r\nexport const getAllRestaurant = searchParam => getRestaurant.get(searchParam ? `?${searchParam}` : '');\r\nexport const getSpecificRestaurant = (area, searchParam = '') => getRestaurant.get(`/${area}?${searchParam}`);","export const countryDic = {\r\n  '全台': '',\r\n  '臺北市': 'Taipei',\r\n  '新北市': 'NewTaipei',\r\n  '桃園市': 'Taoyuan',\r\n  '臺中市': 'Taichung',\r\n  '臺南市': 'Tainan',\r\n  '高雄市': 'Kaohsiung',\r\n  '基隆市': 'Keelung',\r\n  '新竹市': 'Hsinchu',\r\n  '新竹縣': 'HsinchuCounty',\r\n  '苗栗縣': 'MiaoliCounty',\r\n  '彰化縣': 'ChanghuaCounty',\r\n  '南投縣': 'NantouCounty',\r\n  '雲林縣': 'YunlinCounty',\r\n  '嘉義縣': 'ChiayiCounty',\r\n  '嘉義市': 'Chiayi',\r\n  '屏東縣': 'PingtungCounty',\r\n  '宜蘭縣': 'YilanCounty',\r\n  '花蓮縣': 'HualienCounty',\r\n  '臺東縣': 'TaitungCounty',\r\n  '金門縣': 'KinmenCounty',\r\n  '澎湖縣': 'PenghuCounty',\r\n  '連江縣': 'LienchiangCounty',\r\n};\r\n\r\nexport const arrCountryName = [\r\n  '全台',\r\n  '臺北市',\r\n  '新北市',\r\n  '桃園市',\r\n  '臺中市',\r\n  '臺南市',\r\n  '高雄市',\r\n  '基隆市',\r\n  '新竹市',\r\n  '新竹縣',\r\n  '苗栗縣',\r\n  '彰化縣',\r\n  '南投縣',\r\n  '雲林縣',\r\n  '嘉義縣',\r\n  '嘉義市',\r\n  '屏東縣',\r\n  '宜蘭縣',\r\n  '花蓮縣',\r\n  '臺東縣',\r\n  '金門縣',\r\n  '澎湖縣',\r\n  '連江縣',\r\n];\r\n\r\nexport const arrRegions = ['全部地區', '北部', '中部', '南部', '東部', '離島'];\r\n\r\nexport const regionTaiwan = {\r\n  '全部地區': ['全台', '臺北市', '新北市', '桃園市', '臺中市', '臺南市', '高雄市', '基隆市', '新竹市', '新竹縣', '苗栗縣', '彰化縣', '南投縣', '雲林縣', '嘉義縣', '嘉義市', '屏東縣', '宜蘭縣', '花蓮縣', '臺東縣', '金門縣', '澎湖縣', '連江縣',],\r\n  '北部': ['全部', '臺北市', '新北市', '基隆市', '新竹市', '桃園市', '新竹縣', '宜蘭縣'],\r\n  '中部': ['全部', '臺中市', '苗栗縣', '彰化縣', '南投縣', '雲林縣'],\r\n  '南部': ['全部', '高雄市', '臺南市', '嘉義市', '嘉義縣', '屏東縣', '澎湖縣'],\r\n  '東部': ['全部', '花蓮縣', '臺東縣'],\r\n  '離島': ['全部', '金門縣', '連江縣']\r\n};","export const PAGE_NUM = 30;","import { useEffect, useState } from 'react';\r\nimport { PAGE_NUM } from '../constants/pageData';\r\n\r\nexport default function useHttp(query = '', filterData = '', pageNumber = 1, callAPI = async () => { }) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [hasMore, setHasMore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setData([]);\r\n  }, [query, filterData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n\r\n    const updateData = async () => {\r\n      try {\r\n        let resp = await callAPI(pageNumber);\r\n\r\n        setData(prevData => { return [...prevData, ...resp.data]; });\r\n        setHasMore(resp.data.length === PAGE_NUM);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n    };\r\n\r\n    const delay = setTimeout(() => {\r\n      updateData();\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearTimeout(delay);\r\n    };\r\n  }, [query, filterData, pageNumber]);\r\n  return { loading, error, data, hasMore };\r\n}\r\n","import styled from 'styled-components/macro';\r\n\r\nexport const Button = styled.button`\r\n  text-align: center;\r\n  padding: 5px 10px;\r\n  font-size: 14px;\r\n  background-color: ${({ isActive }) => isActive ? 'red' : 'lightyellow'};\r\n\r\n  @media (hover: hover) and (pointer: fine) {\r\n    &:hover {\r\n      background-color: ${({ isActive }) => isActive ? 'red' : 'pink'};\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { Button } from './styles';\r\n\r\nconst FilterBtn = ({ currentItem, data, setFilterData }) => {\r\n  const clickHandler = (e) => {\r\n    let select = e.target.innerText;\r\n    select !== '全部' ? setFilterData(e.target.innerText) : setFilterData('全台');\r\n  };\r\n\r\n  return (\r\n    <Button onClick={e => clickHandler(e)} isActive={currentItem === data || (currentItem === '全台' && data === '全部')}>{data}</Button>\r\n  );\r\n};\r\n\r\nexport default FilterBtn;","import styled from 'styled-components/macro';\r\n\r\nexport const Container = styled.div`\r\n  padding: 3% 5%;\r\n`;\r\n\r\nexport const FilterCont = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const FilterBtnCont = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(5rem, 1fr));\r\n  grid-gap: 10px;\r\n`;\r\n\r\nexport const Searchbar = styled.input`\r\n  background-color: white;\r\n`;\r\n\r\nexport const GridCont = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, minmax(15rem, 1fr));\r\n  margin: 3% 0px;\r\n  grid-gap: 30px;\r\n\r\n  @media (max-width: 1200px) {\r\n    grid-template-columns: repeat(1, minmax(15rem, 1fr));\r\n  }\r\n`;\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { ResultItem, SelectFilter } from '..';\r\nimport { getAllScenicSpots, getSpecificScenicSpots } from '../../api';\r\nimport { countryDic, arrRegions, regionTaiwan } from '../../constants/filterData';\r\nimport { PAGE_NUM } from '../../constants/pageData';\r\nimport useHttp from '../../hooks/useHttp';\r\nimport FilterBtn from '../FilterBtn';\r\nimport {\r\n  Container,\r\n  FilterCont,\r\n  FilterBtnCont,\r\n  Searchbar,\r\n  GridCont,\r\n} from './styles';\r\n\r\nconst ScenicSpotsSection = () => {\r\n  const [countrySelect, setCountrySelect] = useState('全台');\r\n  const [regionSelect, setRegionSelect] = useState('全部地區');\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  const setFilterName = () => {\r\n    let name = '';\r\n\r\n    if ((regionSelect !== '全部地區' && countrySelect === '全台')) {\r\n      name += searchValue.length !== 0 ? ` and contains(NAME,'${searchValue}') and (` : ' and (';\r\n      regionTaiwan[regionSelect].slice(1).map((region, index) => {\r\n        name += (index !== 0 ? ' or ' : '') + `contains(City,'${region}')`;\r\n      });\r\n      name += ')';\r\n    } else {\r\n      name += searchValue.length !== 0 ? ` and contains(NAME,'${searchValue}')` : '';\r\n    }\r\n    return name;\r\n  };\r\n\r\n  const callAPI = async (pageNumber) => {\r\n    let resp = [];\r\n    let filterName = setFilterName();\r\n    let searchParam = new URLSearchParams([\r\n      ['$top', PAGE_NUM],\r\n      ['$filter', `Picture/PictureUrl1 ne null${filterName}`],\r\n      ['$skip', (pageNumber - 1) * PAGE_NUM],\r\n      ['$format', 'JSON'],\r\n    ]);\r\n\r\n    if (countrySelect === '全台') {\r\n      resp = await getAllScenicSpots(searchParam.toString());\r\n    } else {\r\n      resp = await getSpecificScenicSpots(countryDic[countrySelect], searchParam.toString());\r\n    }\r\n    return resp;\r\n  };\r\n\r\n  const {\r\n    data: scenicSpots,\r\n    hasMore,\r\n    loading,\r\n    // error\r\n  } = useHttp(searchValue, `${countrySelect},${regionSelect}`, pageNumber, callAPI);\r\n\r\n  const observer = useRef();\r\n  const lastScenicSpotsElementRef = useCallback(node => {\r\n    if (loading) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\r\n      }\r\n    });\r\n    if (node) observer.current.observe(node);\r\n  }, [loading, hasMore]);\r\n\r\n  const handleSearch = e => {\r\n    setSearchValue(e.target.value);\r\n    setPageNumber(1);\r\n  };\r\n\r\n  const regionFilter = selectRegion => {\r\n    setCountrySelect('全台');\r\n    setRegionSelect(selectRegion);\r\n    setPageNumber(1);\r\n  };\r\n\r\n  const countryFilter = selectCountry => {\r\n    setCountrySelect(selectCountry);\r\n    setPageNumber(1);\r\n  };\r\n\r\n\r\n  const renderScenicSpots = () => (\r\n    scenicSpots.map((item, index) => {\r\n      if (item?.Picture?.PictureUrl1.includes('210.69') ||\r\n        item?.Picture?.PictureUrl1.includes('travel.nantou.gov.tw') ||\r\n        item?.Picture?.PictureUrl1.includes('cloud.culture.tw') ||\r\n        item?.Picture?.PictureUrl1.includes('northguan-nsa') ||\r\n        item?.Name.includes('Test')\r\n      )\r\n        return;\r\n      return (\r\n        <ResultItem\r\n          ref={scenicSpots.length - 3 === index ? lastScenicSpotsElementRef : null}\r\n          key={index}\r\n          data={item}\r\n        />\r\n      );\r\n    })\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <FilterCont>\r\n        <Searchbar type=\"text\" value={searchValue} onChange={e => handleSearch(e)} />\r\n        <SelectFilter currentItem={regionSelect} data={arrRegions} setFilterData={(regionSelected) => regionFilter(regionSelected)} />\r\n      </FilterCont>\r\n      <FilterBtnCont>\r\n        {regionTaiwan[regionSelect].map((item, index) => {\r\n          return (\r\n            <FilterBtn\r\n              key={index}\r\n              data={item}\r\n              currentItem={countrySelect}\r\n              setFilterData={(countrySelected) => countryFilter(countrySelected)} />\r\n          );\r\n        })\r\n        }\r\n      </FilterBtnCont>\r\n      <GridCont>\r\n        {renderScenicSpots()}\r\n      </GridCont>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ScenicSpotsSection;\r\n","import styled from 'styled-components/macro';\r\n\r\nexport const Container = styled.div`\r\n  padding: 3% 5%;\r\n`;\r\n\r\nexport const FilterCont = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const FilterForm = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Searchbar = styled.input`\r\n  background-color: white;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const Option = styled.option`\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const GridCont = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, minmax(15rem, 1fr));\r\n  margin: 3% 0px;\r\n  grid-gap: 30px;\r\n\r\n  @media (max-width: 1200px) {\r\n    grid-template-columns: repeat(1, minmax(15rem, 1fr));\r\n  }\r\n`;","import React, { useState, useRef, useCallback } from 'react';\r\nimport { ResultItem } from '..';\r\nimport { getAllHotels, getSpecificHotels } from '../../api';\r\nimport { arrCountryName, countryDic } from '../../constants/filterData';\r\nimport { PAGE_NUM } from '../../constants/pageData';\r\nimport useHttp from '../../hooks/useHttp';\r\nimport {\r\n  Container,\r\n  FilterCont,\r\n  FilterForm,\r\n  Searchbar,\r\n  Select,\r\n  Option,\r\n  GridCont,\r\n} from './styles';\r\n\r\nconst HotelSection = () => {\r\n  const [countrySelect, setCountrySelect] = useState('全台');\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  const setFilterName = () => {\r\n    let name = '';\r\n\r\n    name += searchValue.length !== 0 ? ` and contains(NAME,'${searchValue}')` : '';\r\n    return name;\r\n  };\r\n\r\n  const callAPI = async (pageNumber) => {\r\n    let resp = [];\r\n    let filterName = setFilterName();\r\n    let searchParam = new URLSearchParams([\r\n      ['$top', PAGE_NUM],\r\n      ['$filter', `Picture/PictureUrl1 ne null${filterName}`],\r\n      ['$skip', (pageNumber - 1) * PAGE_NUM],\r\n      ['$format', 'JSON'],\r\n    ]);\r\n\r\n    if (countrySelect === '全台') {\r\n      resp = await getAllHotels(searchParam.toString());\r\n    } else {\r\n      resp = await getSpecificHotels(countryDic[countrySelect], searchParam.toString());\r\n    }\r\n    return resp;\r\n  };\r\n\r\n  const {\r\n    data: hotels,\r\n    hasMore,\r\n    loading,\r\n    // error\r\n  } = useHttp(searchValue, countrySelect, pageNumber, callAPI);\r\n\r\n  const observer = useRef();\r\n  const lastHotelsElementRef = useCallback(node => {\r\n    if (loading) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\r\n      }\r\n    });\r\n    if (node) observer.current.observe(node);\r\n  }, [loading, hasMore]);\r\n\r\n  const handleSearch = e => {\r\n    setSearchValue(e.target.value);\r\n    setPageNumber(1);\r\n  };\r\n\r\n  const handleFilter = e => {\r\n    setCountrySelect(e.target.value);\r\n    setPageNumber(1);\r\n  };\r\n\r\n  const renderHotels = () => (\r\n    hotels.map((item, index) => {\r\n      if (item?.Picture?.PictureUrl1.includes('210.69') ||\r\n        item?.Picture?.PictureUrl1.includes('travel.nantou.gov.tw') ||\r\n        item?.Picture?.PictureUrl1.includes('cloud.culture.tw') ||\r\n        item?.Picture?.PictureUrl1.includes('northguan-nsa') ||\r\n        item?.Name.includes('Test')\r\n      )\r\n        return;\r\n\r\n      return (\r\n        <ResultItem\r\n          ref={hotels.length - 3 === index ? lastHotelsElementRef : null}\r\n          key={index}\r\n          data={item}\r\n        />\r\n      );\r\n    })\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <FilterCont>\r\n        <FilterForm >\r\n          <Searchbar type=\"text\" value={searchValue} onChange={e => handleSearch(e)} />\r\n          <Select value={countrySelect} onChange={e => handleFilter(e)}>\r\n            {arrCountryName.map((item, index) => <Option key={index} value={item}>{item}</Option>)}\r\n          </Select>\r\n        </FilterForm>\r\n      </FilterCont>\r\n      <GridCont>\r\n        {renderHotels()}\r\n      </GridCont>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HotelSection;\r\n","import styled from 'styled-components/macro';\r\n\r\nexport const Container = styled.div`\r\n  padding: 3% 5%;\r\n`;\r\n\r\nexport const FilterCont = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const FilterForm = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Searchbar = styled.input`\r\n  background-color: white;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const Option = styled.option`\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const GridCont = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, minmax(15rem, 1fr));\r\n  margin: 3% 0px;\r\n  grid-gap: 30px;\r\n\r\n  @media (max-width: 1200px) {\r\n    grid-template-columns: repeat(1, minmax(15rem, 1fr));\r\n  }\r\n`;","import React, { useState, useRef, useCallback } from 'react';\r\nimport { ResultItem } from '..';\r\nimport { getAllActivities, getSpecificActivities } from '../../api';\r\nimport { arrCountryName, countryDic } from '../../constants/filterData';\r\nimport { PAGE_NUM } from '../../constants/pageData';\r\nimport useHttp from '../../hooks/useHttp';\r\nimport {\r\n  Container,\r\n  FilterCont,\r\n  FilterForm,\r\n  Searchbar,\r\n  Select,\r\n  Option,\r\n  GridCont,\r\n} from './styles';\r\n\r\nconst ActivitiesSection = () => {\r\n  const [countrySelect, setCountrySelect] = useState('全台');\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  const setFilterName = () => {\r\n    let name = '';\r\n\r\n    name += searchValue.length !== 0 ? ` and contains(NAME,'${searchValue}')` : '';\r\n    return name;\r\n  };\r\n\r\n  const callAPI = async (pageNumber) => {\r\n    let resp = [];\r\n    let filterName = setFilterName();\r\n    let searchParam = new URLSearchParams([\r\n      ['$top', PAGE_NUM],\r\n      ['$filter', `Picture/PictureUrl1 ne null${filterName}`],\r\n      ['$skip', (pageNumber - 1) * PAGE_NUM],\r\n      ['$format', 'JSON'],\r\n    ]);\r\n\r\n    if (countrySelect === '全台') {\r\n      resp = await getAllActivities(searchParam.toString());\r\n    } else {\r\n      resp = await getSpecificActivities(countryDic[countrySelect], searchParam.toString());\r\n    }\r\n    return resp;\r\n  };\r\n\r\n  const {\r\n    data: activities,\r\n    hasMore,\r\n    loading,\r\n    // error\r\n  } = useHttp(searchValue, countrySelect, pageNumber, callAPI);\r\n\r\n  const observer = useRef();\r\n  const lastActivitiesElementRef = useCallback(node => {\r\n    if (loading) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\r\n      }\r\n    });\r\n    if (node) observer.current.observe(node);\r\n  }, [loading, hasMore]);\r\n\r\n  const handleSearch = e => {\r\n    setSearchValue(e.target.value);\r\n    setPageNumber(1);\r\n  };\r\n\r\n  const handleFilter = e => {\r\n    setCountrySelect(e.target.value);\r\n    setPageNumber(1);\r\n  };\r\n\r\n  // function parseIsoDatetime(dtstr) {\r\n  //   var dt = dtstr.split(/[: T-]/).map(parseFloat);\r\n  //   return `${dt[0]}/${dt[1]}/${dt[2]}`;\r\n  // }\r\n\r\n  const renderActivities = () => (\r\n    activities.map((item, index) => {\r\n      if (item?.Picture?.PictureUrl1.includes('210.69') ||\r\n        item?.Picture?.PictureUrl1.includes('travel.nantou.gov.tw') ||\r\n        item?.Picture?.PictureUrl1.includes('cloud.culture.tw') ||\r\n        item?.Picture?.PictureUrl1.includes('northguan-nsa') ||\r\n        item?.Name.includes('Test')\r\n      )\r\n        return;\r\n      // let duration = `${parseIsoDatetime(item.StartTime)} ~ ${parseIsoDatetime(item.EndTime)}`;\r\n\r\n      return (\r\n        <ResultItem\r\n          ref={activities.length - 3 === index ? lastActivitiesElementRef : null}\r\n          key={index}\r\n          data={item}\r\n        />\r\n      );\r\n    })\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <FilterCont>\r\n        <FilterForm >\r\n          <Searchbar type=\"text\" value={searchValue} onChange={e => handleSearch(e)} />\r\n          <Select value={countrySelect} onChange={e => handleFilter(e)}>\r\n            {arrCountryName.map((item, index) => <Option key={index} value={item}>{item}</Option>)}\r\n          </Select>\r\n        </FilterForm>\r\n      </FilterCont>\r\n      <GridCont>\r\n        {renderActivities()}\r\n      </GridCont>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ActivitiesSection;\r\n","import styled from 'styled-components/macro';\r\n\r\nexport const Container = styled.div`\r\n  padding: 3% 5%;\r\n`;\r\n\r\nexport const FilterCont = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const FilterForm = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Searchbar = styled.input`\r\n  background-color: white;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const Option = styled.option`\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const GridCont = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, minmax(15rem, 1fr));\r\n  margin: 3% 0px;\r\n  grid-gap: 30px;\r\n\r\n  @media (max-width: 1200px) {\r\n    grid-template-columns: repeat(1, minmax(15rem, 1fr));\r\n  }\r\n`;\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { ResultItem } from '..';\r\nimport { getAllRestaurant, getSpecificRestaurant } from '../../api';\r\nimport { arrCountryName, countryDic } from '../../constants/filterData';\r\nimport { PAGE_NUM } from '../../constants/pageData';\r\nimport useHttp from '../../hooks/useHttp';\r\nimport {\r\n  Container,\r\n  FilterCont,\r\n  FilterForm,\r\n  Searchbar,\r\n  Select,\r\n  Option,\r\n  GridCont,\r\n} from './styles';\r\n\r\nconst RestaurantSection = () => {\r\n  const [countrySelect, setCountrySelect] = useState('全台');\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  const setFilterName = () => {\r\n    let name = '';\r\n\r\n    name += searchValue.length !== 0 ? ` and contains(NAME,'${searchValue}')` : '';\r\n    return name;\r\n  };\r\n\r\n  const callAPI = async (pageNumber) => {\r\n    let resp = [];\r\n    let filterName = setFilterName();\r\n    let searchParam = new URLSearchParams([\r\n      ['$top', PAGE_NUM],\r\n      ['$filter', `Picture/PictureUrl1 ne null${filterName}`],\r\n      ['$skip', (pageNumber - 1) * PAGE_NUM],\r\n      ['$format', 'JSON'],\r\n    ]);\r\n\r\n    if (countrySelect === '全台') {\r\n      resp = await getAllRestaurant(searchParam.toString());\r\n    } else {\r\n      resp = await getSpecificRestaurant(countryDic[countrySelect], searchParam.toString());\r\n    }\r\n    return resp;\r\n  };\r\n\r\n  const {\r\n    data: restaurant,\r\n    hasMore,\r\n    loading,\r\n    // error\r\n  } = useHttp(searchValue, countrySelect, pageNumber, callAPI);\r\n\r\n  const observer = useRef();\r\n  const lastRestaurantElementRef = useCallback(node => {\r\n    if (loading) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\r\n      }\r\n    });\r\n    if (node) observer.current.observe(node);\r\n  }, [loading, hasMore]);\r\n\r\n  const handleSearch = e => {\r\n    setSearchValue(e.target.value);\r\n    setPageNumber(1);\r\n  };\r\n\r\n  const handleFilter = e => {\r\n    setCountrySelect(e.target.value);\r\n    setPageNumber(1);\r\n  };\r\n\r\n  const renderRestaurant = () => (\r\n    restaurant.map((item, index) => {\r\n      if (item?.Picture?.PictureUrl1.includes('210.69') ||\r\n        item?.Picture?.PictureUrl1.includes('travel.nantou.gov.tw') ||\r\n        item?.Picture?.PictureUrl1.includes('cloud.culture.tw') ||\r\n        item?.Picture?.PictureUrl1.includes('northguan-nsa') ||\r\n        item?.Name.includes('Test')\r\n      )\r\n        return;\r\n\r\n      return (\r\n        <ResultItem\r\n          ref={restaurant.length - 3 === index ? lastRestaurantElementRef : null}\r\n          key={index}\r\n          data={item}\r\n        />\r\n      );\r\n    })\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <FilterCont>\r\n        <FilterForm >\r\n          <Searchbar type=\"text\" value={searchValue} onChange={e => handleSearch(e)} />\r\n          <Select value={countrySelect} onChange={e => handleFilter(e)}>\r\n            {arrCountryName.map((item, index) => <Option key={index} value={item}>{item}</Option>)}\r\n          </Select>\r\n        </FilterForm>\r\n      </FilterCont>\r\n      <GridCont>\r\n        {renderRestaurant()}\r\n      </GridCont>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RestaurantSection;\r\n","import styled from 'styled-components/macro';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  background-color: chocolate;\r\n  padding: 0 12% 0 5%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 50px;\r\n`;\r\n\r\nexport const Logo = styled(NavLink)`\r\n  color: white;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Image = styled.img``;\r\n\r\nexport const NavBtnCont = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const NavBtn = styled(NavLink)`\r\n  color: white;\r\n  font-size: 20px;\r\n  padding: 2px 0;\r\n  \r\n  &:not(:last-child) {\r\n    margin-right: 20px;\r\n  }\r\n\r\n  &.${({ activeclassname }) => activeclassname} {\r\n    border-bottom: 3px solid #FFFF6F;\r\n    color: #FFFF6F;\r\n  }\r\n`;","import React from 'react';\r\nimport { Header, Logo, NavBtn, NavBtnCont } from './styles';\r\n\r\nconst NavigationBar = () => {\r\n  return (\r\n    <Header>\r\n      <Logo to='/'>YoTW</Logo>\r\n      <NavBtnCont>\r\n        <NavBtn to='scenicSpots' /*target=\"_blank\" */ activeclassname='active'>景點</NavBtn>\r\n        <NavBtn to='restaurant' activeclassname='active'>餐飲</NavBtn>\r\n        <NavBtn to='hotels' activeclassname='active'>旅宿</NavBtn>\r\n        <NavBtn to='activities' activeclassname='active'>活動</NavBtn>\r\n      </NavBtnCont>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;","import styled from 'styled-components/macro';\r\n\r\n//Select\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const SelectBtn = styled.button`\r\n  background-color: white;\r\n  color: black;\r\n  text-align: center;\r\n  padding: 0 20px;\r\n`;\r\n\r\n//DropDownMenu\r\nexport const Menu = styled.div`\r\n  position: absolute;\r\n  top: 100%;\r\n`;\r\n\r\nexport const DropdownItem = styled.button`\r\n  background-color: ${({ isActive }) => isActive ? 'lightblue' : 'white'};\r\n  color: black;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    background-color: lightgray;\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div``;","import React, { useState } from 'react';\r\nimport { Menu, DropdownItem, SelectBtn, Container } from './styles';\r\n\r\nconst SelectFilter = ({ currentItem, data, setFilterData }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleClick = selectedItem => {\r\n    setIsOpen(prevIsOpen => !prevIsOpen);\r\n    setFilterData(selectedItem);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <SelectBtn onClick={() => setIsOpen(prevIsOpen => !prevIsOpen)}>{currentItem}</SelectBtn>\r\n      {isOpen &&\r\n        <Menu>\r\n          {\r\n            data.map((item, index) =>\r\n              <DropdownItem\r\n                key={index}\r\n                onClick={e => handleClick(e.target.innerText)}\r\n                isActive={currentItem === item}\r\n              >{item}</DropdownItem>\r\n            )\r\n          }\r\n        </Menu>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SelectFilter;","import styled from 'styled-components/macro';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Item = styled(Link)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: gray;\r\n`;\r\n\r\nexport const Image = styled.img`\r\nalign-self: center;\r\nwidth: 40%;\r\nheight: 100%;\r\nobject-fit: cover;\r\n`;\r\n\r\nexport const DetailCont = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin-left: 20px;\r\npadding: 20px;\r\n`;\r\n\r\nexport const Name = styled.h1`\r\nmargin-bottom: 30px;\r\nfont-size: 16px;\r\ncolor: black;\r\n`;\r\n\r\nexport const Description = styled.p`\r\nfont-size: 12px;\r\ncolor: black;\r\n`;","import React from 'react';\r\nimport { Description, DetailCont, Image, Item, Name } from './style';\r\n\r\nconst ResultItem = React.forwardRef((props, ref) => {\r\n  const { data } = props;\r\n  let description = data?.Description || data?.DescriptionDetail;\r\n  description = description?.length > 50 ? (description?.slice(0, 50) ?? '') + '...' : description;\r\n\r\n  return (\r\n    <Item\r\n      ref={ref}\r\n      key={data.ID}\r\n      to={data.ID}\r\n    >\r\n      <Image src={data.Picture.PictureUrl1} alt={data.Picture.PictureDescription1} />\r\n      <DetailCont>\r\n        <Name>{data?.Name?.replaceAll('.', '')}</Name>\r\n        <Description >{description}</Description>\r\n      </DetailCont>\r\n    </Item>\r\n  );\r\n});\r\nResultItem.displayName = 'ResultItem';\r\n\r\nexport default ResultItem;\r\n","import React from 'react';\r\nimport { ActivitiesSection } from '../components';\r\n\r\nconst Activity = () => {\r\n  return (\r\n    <ActivitiesSection />\r\n  );\r\n};\r\n\r\nexport default Activity;","import React from 'react';\r\nimport { HotelSection } from '../components';\r\n\r\nconst Hotels = () => {\r\n  return (\r\n    <HotelSection />\r\n  );\r\n};\r\n\r\nexport default Hotels;","import React from 'react';\r\nimport { RestaurantSection } from '../components';\r\n\r\nconst Restaurant = () => {\r\n  return (\r\n    <>\r\n      <RestaurantSection />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Restaurant;\r\n","import { ScenicSpotsSection } from '../components';\r\nimport React from 'react';\r\n\r\nconst ScenicSpots = () => {\r\n  return (\r\n    <>\r\n      <ScenicSpotsSection />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScenicSpots;","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport { NavigationBar } from './components';\r\nimport Activity from './containers/Activity';\r\nimport Hotels from './containers/Hotels';\r\nimport Restaurant from './containers/Restaurant';\r\nimport ScenicSpots from './containers/ScenicSpots';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <NavigationBar />\r\n      <Routes>\r\n        <Route path='/' element={<ScenicSpots />} />\r\n        <Route path='scenicSpots' element={<ScenicSpots />} />\r\n        <Route path='hotels' element={<Hotels />} />\r\n        <Route path='activities' element={<Activity />} />\r\n        <Route path='restaurant' element={<Restaurant />} />\r\n      </Routes>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *, *:before, *:after {\r\n    box-sizing: border-box;\r\n  }\r\n  html, body {\r\n    height: 100%;\r\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    background-color: #282631;\r\n    /* color: #C7C3C0; */\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const ResetStyle = createGlobalStyle`\r\n  html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    vertical-align: baseline;\r\n    box-sizing: border-box;\r\n  }\r\n  address, caption, cite, code, dfn, em, strong, th, var, b {\r\n    font-weight: normal;\r\n    font-style: normal;\r\n  }\r\n  abbr, acronym {\r\n    border: 0;\r\n  }\r\n  article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\r\n    display: block;\r\n  }\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: inherit;\r\n  }\r\n  html {\r\n    text-size-adjust: 100%;\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n      line-height: 1;\r\n  }\r\n  ol, ul {\r\n    list-style: none;\r\n  }\r\n  blockquote, q {\r\n    quotes: none;\r\n  }\r\n  blockquote {\r\n    &:before,   &:after {\r\n      content: '';\r\n      content: none;\r\n    }\r\n  }\r\n  q {\r\n    &:before,   &:after {\r\n      content: '';\r\n      content: none;\r\n    }\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n  }\r\n  caption, th {\r\n    text-align: left;\r\n  }\r\n  textarea {\r\n    resize: none;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n  }\r\n  button {\r\n    padding: 0;\r\n    border: none;\r\n    background: none;\r\n  }\r\n  input, textarea {\r\n    all: unset;\r\n  }\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { ResetStyle, GlobalStyles } from './global-styles';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ResetStyle />\r\n    <GlobalStyles />\r\n    <BrowserRouter basename=\"/YoTW\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}