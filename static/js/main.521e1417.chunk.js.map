{"version":3,"sources":["api.js","constants/filterData.js","components/FilterSection/styles.js","components/FilterSection/index.js","hooks/useHttp.js","containers/ScenicSpots.js","App.js","global-styles.js","index.js"],"names":["getScenicSpots","axios","create","baseURL","headers","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","getHMAC","getAuthorizationHeader","getAllScenicSpots","searchParam","get","getSpecificScenicSpots","area","countryDic","arrCountryName","Container","styled","div","FilterCont","FilterForm","form","Searchbar","input","Select","select","Option","option","GridCont","Item","Image","img","DetailCont","Name","h1","Description","p","FilterSection","useState","countrySelect","setCountrySelect","searchValue","setSearchValue","pageNumber","setPageNumber","callAPI","filterData","a","resp","toString","query","loading","setLoading","error","setError","data","setData","hasMore","setHasMore","useEffect","filterName","length","URLSearchParams","updateData","prevData","delay","setTimeout","clearTimeout","useHttp","scenicSpots","observer","useRef","lastScenicSpotsElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","type","value","onChange","e","target","handleSearch","handleFilter","map","item","index","Picture","PictureUrl1","includes","ref","src","alt","PictureDescription1","replaceAll","DescriptionDetail","slice","ID","ScenicSpots","App","GlobalStyles","createGlobalStyle","ResetStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.521e1417.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport jsSHA from 'jssha';\r\n\r\nconst getAuthorizationHeader = () => {\r\n  //  填入自己 ID、KEY 開始\r\n  let AppID = '79b1459ffeca4aabadd35e191c8fed59';\r\n  let AppKey = 'zvSZkHtUt4JieFWkdnOyW4iGtt4';\r\n  //  填入自己 ID、KEY 結束\r\n  let GMTString = new Date().toGMTString();\r\n  let ShaObj = new jsSHA('SHA-1', 'TEXT');\r\n  ShaObj.setHMACKey(AppKey, 'TEXT');\r\n  ShaObj.update('x-date: ' + GMTString);\r\n  let HMAC = ShaObj.getHMAC('B64');\r\n  // eslint-disable-next-line no-useless-escape\r\n  let Authorization = 'hmac username=\\\"' + AppID + '\\\", algorithm=\\\"hmac-sha1\\\", headers=\\\"x-date\\\", signature=\\\"' + HMAC + '\\\"';\r\n  return { 'Authorization': Authorization, 'X-Date': GMTString };\r\n};\r\n\r\n//觀光景點相關\r\nconst getScenicSpots = axios.create({\r\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot',\r\n  headers: getAuthorizationHeader(),\r\n});\r\n\r\n//觀光景點相關\r\nexport const getAllScenicSpots = searchParam => getScenicSpots.get(searchParam ? `?${searchParam}` : '');\r\nexport const getSpecificScenicSpots = (area, searchParam = '') => getScenicSpots.get(`/${area}?${searchParam}`);","export const countryDic = {\r\n  '全台': '',\r\n  '臺北市': 'Taipei',\r\n  '新北市': 'NewTaipei',\r\n  '桃園市': 'Taoyuan',\r\n  '臺中市': 'Taichung',\r\n  '臺南市': 'Tainan',\r\n  '高雄市': 'Kaohsiung',\r\n  '基隆市': 'Keelung',\r\n  '新竹市': 'Hsinchu',\r\n  '新竹縣': 'HsinchuCounty',\r\n  '苗栗縣': 'MiaoliCounty',\r\n  '彰化縣': 'ChanghuaCounty',\r\n  '南投縣': 'NantouCounty',\r\n  '雲林縣': 'YunlinCounty',\r\n  '嘉義縣': 'ChiayiCounty',\r\n  '嘉義市': 'Chiayi',\r\n  '屏東縣': 'PingtungCounty',\r\n  '宜蘭縣': 'YilanCounty',\r\n  '花蓮縣': 'HualienCounty',\r\n  '臺東縣': 'TaitungCounty',\r\n  '金門縣': 'KinmenCounty',\r\n  '澎湖縣': 'PenghuCounty',\r\n  '連江縣': 'LienchiangCounty',\r\n};\r\n\r\nexport const arrCountryName = [\r\n  '全台',\r\n  '臺北市',\r\n  '新北市',\r\n  '桃園市',\r\n  '臺中市',\r\n  '臺南市',\r\n  '高雄市',\r\n  '基隆市',\r\n  '新竹市',\r\n  '新竹縣',\r\n  '苗栗縣',\r\n  '彰化縣',\r\n  '南投縣',\r\n  '雲林縣',\r\n  '嘉義縣',\r\n  '嘉義市',\r\n  '屏東縣',\r\n  '宜蘭縣',\r\n  '花蓮縣',\r\n  '臺東縣',\r\n  '金門縣',\r\n  '澎湖縣',\r\n  '連江縣',\r\n];","import styled from 'styled-components/macro';\r\n\r\nexport const Container = styled.div`\r\n  padding: 3% 5%;\r\n`;\r\n\r\nexport const FilterCont = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const FilterForm = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Searchbar = styled.input`\r\n  background-color: white;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const Option = styled.option`\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const GridCont = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, minmax(15rem, 1fr));\r\n  margin: 3% 0px;\r\n  grid-gap: 30px;\r\n\r\n  @media (max-width: 1200px) {\r\n    grid-template-columns: repeat(1, minmax(15rem, 1fr));\r\n  }\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: gray;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  align-self: center;\r\n  width: 40%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const DetailCont = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 20px;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const Name = styled.h1`\r\n  margin-bottom: 30px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-size: 12px;\r\n`;\r\n\r\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useRef, useCallback } from 'react';\nimport { getAllScenicSpots, getSpecificScenicSpots } from '../../api';\nimport { arrCountryName, countryDic } from '../../constants/filterData';\nimport useHttp from '../../hooks/useHttp';\nimport {\n  Container,\n  FilterCont,\n  FilterForm,\n  Searchbar,\n  Select,\n  Option,\n  GridCont,\n  Description,\n  DetailCont,\n  Image,\n  Item,\n  Name\n} from './styles';\n\nconst FilterSection = () => {\n  // const [scenicSpotsData, setScenicSpotsData] = useState([]);\n  const [countrySelect, setCountrySelect] = useState('全台');\n  const [searchValue, setSearchValue] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const callAPI = async (filterData, searchParam) => {\n    let resp = [];\n\n    if (filterData === '全台') {\n      resp = await getAllScenicSpots(searchParam.toString());\n    } else {\n      resp = await getSpecificScenicSpots(countryDic[filterData], searchParam.toString());\n    }\n    return resp;\n  };\n\n  const {\n    data: scenicSpots,\n    hasMore,\n    loading,\n    error\n  } = useHttp(searchValue, countrySelect, pageNumber, callAPI);\n\n  const observer = useRef();\n  const lastScenicSpotsElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  const handleSearch = e => {\n    setSearchValue(e.target.value);\n    setPageNumber(1);\n  };\n\n  const handleFilter = e => {\n    setCountrySelect(e.target.value);\n    setSearchValue('');\n    setPageNumber(1);\n  };\n\n  const renderScenicSpots = () => (\n    scenicSpots.map((item, index) => {\n      if (item?.Picture?.PictureUrl1.includes('210.69')) return;\n      return (\n        <Item ref={scenicSpots.length - 3 === index ? lastScenicSpotsElementRef : null} key={item.ID}>\n          <Image src={item.Picture.PictureUrl1} alt={item.Picture.PictureDescription1} />\n          <DetailCont>\n            <Name>{item?.Name?.replaceAll('.', '')}</Name>\n            <Description >{(item?.DescriptionDetail?.slice(0, 50) ?? '') + '...'}</Description>\n          </DetailCont>\n        </Item>\n      );\n    })\n  );\n\n  return (\n    <Container>\n      <FilterCont>\n        <FilterForm >\n          <Searchbar type=\"text\" value={searchValue} onChange={e => handleSearch(e)} />\n          <Select value={countrySelect} onChange={e => handleFilter(e)}>\n            {arrCountryName.map((item, index) => <Option key={index} value={item}>{item}</Option>)}\n          </Select>\n        </FilterForm>\n      </FilterCont>\n      <GridCont>\n        {renderScenicSpots()}\n      </GridCont>\n    </Container>\n  );\n};\n\nexport default FilterSection;\n","import { useEffect, useState } from 'react';\n\nconst PAGE_NUM = 30;\nexport default function useHttp(query, filterData, pageNumber, callAPI) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n\n  useEffect(() => {\n    setData([]);\n  }, [query, filterData]);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n\n    let filterName = query.length !== 0 ? ` and contains(NAME,'${query}')` : '';\n    let searchParam = new URLSearchParams([\n      ['$top', PAGE_NUM],\n      ['$filter', `Picture/PictureUrl1 ne null${filterName}`],\n      ['$skip', (pageNumber - 1) * PAGE_NUM],\n      ['$format', 'JSON'],\n    ]);\n\n    const updateData = async () => {\n      try {\n        let resp = await callAPI(filterData, searchParam);\n\n        setData(prevData => { return [...prevData, ...resp.data]; });\n        setHasMore(resp.data.length === PAGE_NUM);\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n\n    const delay = setTimeout(() => {\n      updateData();\n    }, 500);\n\n    return () => {\n      clearTimeout(delay);\n    };\n  }, [query, filterData, pageNumber]);\n\n  return { loading, error, data, hasMore };\n}\n","import { FilterSection } from '../components';\r\nimport React from 'react';\r\n\r\nconst ScenicSpots = () => {\r\n  return (\r\n    <>\r\n      <FilterSection />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScenicSpots;","import React from 'react';\r\nimport ScenicSpots from './containers/ScenicSpots';\r\n\r\nfunction App() {\r\n  return (\r\n    <ScenicSpots />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *, *:before, *:after {\r\n    box-sizing: border-box;\r\n  }\r\n  html, body {\r\n    height: 100%;\r\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    background-color: #282631;\r\n    /* color: #C7C3C0; */\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const ResetStyle = createGlobalStyle`\r\n  html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    vertical-align: baseline;\r\n    box-sizing: border-box;\r\n  }\r\n  address, caption, cite, code, dfn, em, strong, th, var, b {\r\n    font-weight: normal;\r\n    font-style: normal;\r\n  }\r\n  abbr, acronym {\r\n    border: 0;\r\n  }\r\n  article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\r\n    display: block;\r\n  }\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: inherit;\r\n  }\r\n  html {\r\n    text-size-adjust: 100%;\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n      line-height: 1;\r\n  }\r\n  ol, ul {\r\n    list-style: none;\r\n  }\r\n  blockquote, q {\r\n    quotes: none;\r\n  }\r\n  blockquote {\r\n    &:before,   &:after {\r\n      content: '';\r\n      content: none;\r\n    }\r\n  }\r\n  q {\r\n    &:before,   &:after {\r\n      content: '';\r\n      content: none;\r\n    }\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n  }\r\n  caption, th {\r\n    text-align: left;\r\n  }\r\n  textarea {\r\n    resize: none;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n  }\r\n  button {\r\n    padding: 0;\r\n    border: none;\r\n    background: none;\r\n  }\r\n  input, textarea {\r\n    all: unset;\r\n  }\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { ResetStyle, GlobalStyles } from './global-styles';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ResetStyle />\r\n    <GlobalStyles />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}