{"version":3,"sources":["api.js","constants/filterData.js","hooks/useHttp.js","components/FilterSection/styles.js","components/FilterSection/index.js","components/NavigationBar/styles.js","components/NavigationBar/index.js","components/Layout/styles.js","components/Layout/index.js","components/HotelFilter/styles.js","components/HotelFilter/index.js","components/ActivitiesSection/styles.js","components/ActivitiesSection/index.js","components/RestaurantSection/styles.js","components/RestaurantSection/index.js","containers/Activity.js","containers/Hotels.js","containers/Restaurant.js","containers/ScenicSpots.js","App.js","global-styles.js","index.js"],"names":["getAuthorizationHeader","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","getHMAC","getScenicSpots","axios","create","baseURL","headers","getHotels","getActivities","getRestaurant","getAllScenicSpots","searchParam","get","getSpecificScenicSpots","area","getAllHotels","getSpecificHotels","getAllActivities","getSpecificActivities","getAllRestaurant","getSpecificRestaurant","countryDic","arrCountryName","useHttp","query","filterData","pageNumber","callAPI","useState","loading","setLoading","error","setError","data","setData","hasMore","setHasMore","useEffect","filterName","length","URLSearchParams","updateData","a","resp","prevData","delay","setTimeout","clearTimeout","Container","styled","div","FilterCont","FilterForm","form","Searchbar","input","Select","select","Option","option","GridCont","Item","Image","img","DetailCont","Name","h1","Description","p","FilterSection","countrySelect","setCountrySelect","searchValue","setSearchValue","setPageNumber","toString","scenicSpots","observer","useRef","lastScenicSpotsElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","type","value","onChange","e","target","handleSearch","handleFilter","map","item","index","Picture","PictureUrl1","includes","ref","src","alt","PictureDescription1","replaceAll","DescriptionDetail","slice","ID","Header","header","Logo","NavLink","NavBtnCont","NavBtn","NavigationBar","to","Layout","props","children","HotelFilter","hotels","lastHotelsElementRef","description","text","ActivitiesSection","activities","lastActivitiesElementRef","RestaurantSection","restaurant","lastRestaurantElementRef","Activity","Hotels","Restaurant","ScenicSpots","App","path","element","GlobalStyles","createGlobalStyle","ResetStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58cfd598.chunk.js","sourcesContent":["import axios from 'axios';\nimport jsSHA from 'jssha';\n\nconst getAuthorizationHeader = () => {\n  //  填入自己 ID、KEY 開始\n  let AppID = '79b1459ffeca4aabadd35e191c8fed59';\n  let AppKey = 'zvSZkHtUt4JieFWkdnOyW4iGtt4';\n  //  填入自己 ID、KEY 結束\n  let GMTString = new Date().toGMTString();\n  let ShaObj = new jsSHA('SHA-1', 'TEXT');\n  ShaObj.setHMACKey(AppKey, 'TEXT');\n  ShaObj.update('x-date: ' + GMTString);\n  let HMAC = ShaObj.getHMAC('B64');\n  // eslint-disable-next-line no-useless-escape\n  let Authorization = 'hmac username=\\\"' + AppID + '\\\", algorithm=\\\"hmac-sha1\\\", headers=\\\"x-date\\\", signature=\\\"' + HMAC + '\\\"';\n  return { 'Authorization': Authorization, 'X-Date': GMTString };\n};\n\n//景點相關\nconst getScenicSpots = axios.create({\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot',\n  headers: getAuthorizationHeader(),\n});\n\n//旅宿相關\nconst getHotels = axios.create({\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Tourism/Hotel',\n  headers: getAuthorizationHeader(),\n});\n\n//活動相關\nconst getActivities = axios.create({\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Tourism/Activity',\n  headers: getAuthorizationHeader(),\n});\n\n//餐飲相關\nconst getRestaurant = axios.create({\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Tourism/Restaurant',\n  headers: getAuthorizationHeader(),\n});\n\n\n//景點相關\nexport const getAllScenicSpots = searchParam => getScenicSpots.get(searchParam ? `?${searchParam}` : '');\nexport const getSpecificScenicSpots = (area, searchParam = '') => getScenicSpots.get(`/${area}?${searchParam}`);\n\n//旅宿相關\nexport const getAllHotels = searchParam => getHotels.get(searchParam ? `?${searchParam}` : '');\nexport const getSpecificHotels = (area, searchParam = '') => getHotels.get(`/${area}?${searchParam}`);\n\n//旅宿相關\nexport const getAllActivities = searchParam => getActivities.get(searchParam ? `?${searchParam}` : '');\nexport const getSpecificActivities = (area, searchParam = '') => getActivities.get(`/${area}?${searchParam}`);\n\n//餐飲相關\nexport const getAllRestaurant = searchParam => getRestaurant.get(searchParam ? `?${searchParam}` : '');\nexport const getSpecificRestaurant = (area, searchParam = '') => getRestaurant.get(`/${area}?${searchParam}`);","export const countryDic = {\n  '全台': '',\n  '臺北市': 'Taipei',\n  '新北市': 'NewTaipei',\n  '桃園市': 'Taoyuan',\n  '臺中市': 'Taichung',\n  '臺南市': 'Tainan',\n  '高雄市': 'Kaohsiung',\n  '基隆市': 'Keelung',\n  '新竹市': 'Hsinchu',\n  '新竹縣': 'HsinchuCounty',\n  '苗栗縣': 'MiaoliCounty',\n  '彰化縣': 'ChanghuaCounty',\n  '南投縣': 'NantouCounty',\n  '雲林縣': 'YunlinCounty',\n  '嘉義縣': 'ChiayiCounty',\n  '嘉義市': 'Chiayi',\n  '屏東縣': 'PingtungCounty',\n  '宜蘭縣': 'YilanCounty',\n  '花蓮縣': 'HualienCounty',\n  '臺東縣': 'TaitungCounty',\n  '金門縣': 'KinmenCounty',\n  '澎湖縣': 'PenghuCounty',\n  '連江縣': 'LienchiangCounty',\n};\n\nexport const arrCountryName = [\n  '全台',\n  '臺北市',\n  '新北市',\n  '桃園市',\n  '臺中市',\n  '臺南市',\n  '高雄市',\n  '基隆市',\n  '新竹市',\n  '新竹縣',\n  '苗栗縣',\n  '彰化縣',\n  '南投縣',\n  '雲林縣',\n  '嘉義縣',\n  '嘉義市',\n  '屏東縣',\n  '宜蘭縣',\n  '花蓮縣',\n  '臺東縣',\n  '金門縣',\n  '澎湖縣',\n  '連江縣',\n];","import { useEffect, useState } from 'react';\n\nconst PAGE_NUM = 30;\nexport default function useHttp(query, filterData, pageNumber, callAPI) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n\n  useEffect(() => {\n    setData([]);\n  }, [query, filterData]);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n\n    let filterName = query.length !== 0 ? ` and contains(NAME,'${query}')` : '';\n    let searchParam = new URLSearchParams([\n      ['$top', PAGE_NUM],\n      ['$filter', `Picture/PictureUrl1 ne null${filterName}`],\n      ['$skip', (pageNumber - 1) * PAGE_NUM],\n      ['$format', 'JSON'],\n    ]);\n\n    const updateData = async () => {\n      try {\n        let resp = await callAPI(filterData, searchParam);\n\n        setData(prevData => { return [...prevData, ...resp.data]; });\n        setHasMore(resp.data.length === PAGE_NUM);\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n\n    const delay = setTimeout(() => {\n      updateData();\n    }, 500);\n\n    return () => {\n      clearTimeout(delay);\n    };\n  }, [query, filterData, pageNumber]);\n\n  return { loading, error, data, hasMore };\n}\n","import styled from 'styled-components/macro';\n\nexport const Container = styled.div`\n  padding: 3% 5%;\n`;\n\nexport const FilterCont = styled.div`\n  display: flex;\n  padding: 10px;\n  justify-content: center;\n`;\n\nexport const FilterForm = styled.form`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Searchbar = styled.input`\n  background-color: white;\n`;\n\nexport const Select = styled.select`\n  margin-left: 10px;\n`;\n\nexport const Option = styled.option`\n  margin-left: 10px;\n`;\n\nexport const GridCont = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(15rem, 1fr));\n  margin: 3% 0px;\n  grid-gap: 30px;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: repeat(1, minmax(15rem, 1fr));\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: gray;\n`;\n\nexport const Image = styled.img`\n  align-self: center;\n  width: 40%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const DetailCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  padding: 20px;\n`;\n\nexport const Name = styled.h1`\n  margin-bottom: 30px;\n  font-size: 16px;\n`;\n\nexport const Description = styled.p`\n  font-size: 12px;\n`;\n\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useRef, useCallback } from 'react';\nimport { getAllScenicSpots, getSpecificScenicSpots } from '../../api';\nimport { arrCountryName, countryDic } from '../../constants/filterData';\nimport useHttp from '../../hooks/useHttp';\nimport {\n  Container,\n  FilterCont,\n  FilterForm,\n  Searchbar,\n  Select,\n  Option,\n  GridCont,\n  Description,\n  DetailCont,\n  Image,\n  Item,\n  Name\n} from './styles';\n\nconst FilterSection = () => {\n  // const [scenicSpotsData, setScenicSpotsData] = useState([]);\n  const [countrySelect, setCountrySelect] = useState('全台');\n  const [searchValue, setSearchValue] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const callAPI = async (filterData, searchParam) => {\n    let resp = [];\n\n    if (filterData === '全台') {\n      resp = await getAllScenicSpots(searchParam.toString());\n    } else {\n      resp = await getSpecificScenicSpots(countryDic[filterData], searchParam.toString());\n    }\n    return resp;\n  };\n\n  const {\n    data: scenicSpots,\n    hasMore,\n    loading,\n    error\n  } = useHttp(searchValue, countrySelect, pageNumber, callAPI);\n\n  const observer = useRef();\n  const lastScenicSpotsElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  const handleSearch = e => {\n    setSearchValue(e.target.value);\n    setPageNumber(1);\n  };\n\n  const handleFilter = e => {\n    setCountrySelect(e.target.value);\n    setPageNumber(1);\n  };\n\n  const renderScenicSpots = () => (\n    scenicSpots.map((item, index) => {\n      if (item?.Picture?.PictureUrl1.includes('210.69')) return;\n      return (\n        <Item ref={scenicSpots.length - 3 === index ? lastScenicSpotsElementRef : null} key={item.ID}>\n          <Image src={item.Picture.PictureUrl1} alt={item.Picture.PictureDescription1} />\n          <DetailCont>\n            <Name>{item?.Name?.replaceAll('.', '')}</Name>\n            <Description >{(item?.DescriptionDetail?.slice(0, 50) ?? '') + '...'}</Description>\n          </DetailCont>\n        </Item>\n      );\n    })\n  );\n\n  return (\n    <Container>\n      <FilterCont>\n        <FilterForm >\n          <Searchbar type=\"text\" value={searchValue} onChange={e => handleSearch(e)} />\n          <Select value={countrySelect} onChange={e => handleFilter(e)}>\n            {arrCountryName.map((item, index) => <Option key={index} value={item}>{item}</Option>)}\n          </Select>\n        </FilterForm>\n      </FilterCont>\n      <GridCont>\n        {renderScenicSpots()}\n      </GridCont>\n    </Container>\n  );\n};\n\nexport default FilterSection;\n","import styled from 'styled-components/macro';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = styled.header`\n  display: flex;\n  background-color: chocolate;\n  padding: 0 12% 0 5%;\n  justify-content: space-between;\n  align-items: center;\n  height: 50px;\n`;\n\nexport const Logo = styled(NavLink)`\n  color: white;\n  font-size: 20px;\n`;\n\nexport const Image = styled.img``;\n\nexport const NavBtnCont = styled.div`\n  display: flex;\n`;\n\nexport const NavBtn = styled(NavLink)`\n  color: white;\n  font-size: 20px;\n  \n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;","import React from 'react';\nimport { Header, Logo, NavBtn, NavBtnCont } from './styles';\n\nconst NavigationBar = () => {\n  return (\n    <Header>\n      <Logo to='/YoTW'>YoTW</Logo>\n      <NavBtnCont>\n        <NavBtn to='scenicSpots' /*target=\"_blank\" */>景點</NavBtn>\n        <NavBtn to='/restaurant'>餐飲</NavBtn>\n        <NavBtn to='hotels'>旅宿</NavBtn>\n        <NavBtn to='/activities'>活動</NavBtn>\n      </NavBtnCont>\n    </Header>\n  );\n};\n\nexport default NavigationBar;","import styled from 'styled-components';\n\nexport const Container = styled.div``;","import React from 'react';\n\nimport { NavigationBar } from '..';\nimport { Container } from './styles';\n\nconst Layout = (props) => {\n  return (\n    <>\n      <NavigationBar />\n      <Container>{props.children}</Container>\n    </>\n  );\n};\n\nexport default Layout;","import styled from 'styled-components/macro';\n\nexport const Container = styled.div`\n  padding: 3% 5%;\n`;\n\nexport const FilterCont = styled.div`\n  display: flex;\n  padding: 10px;\n  justify-content: center;\n`;\n\nexport const FilterForm = styled.form`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Searchbar = styled.input`\n  background-color: white;\n`;\n\nexport const Select = styled.select`\n  margin-left: 10px;\n`;\n\nexport const Option = styled.option`\n  margin-left: 10px;\n`;\n\nexport const GridCont = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(15rem, 1fr));\n  margin: 3% 0px;\n  grid-gap: 30px;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: repeat(1, minmax(15rem, 1fr));\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: gray;\n`;\n\nexport const Image = styled.img`\n  align-self: center;\n  width: 40%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const DetailCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  padding: 20px;\n`;\n\nexport const Name = styled.h1`\n  margin-bottom: 30px;\n  font-size: 16px;\n`;\n\nexport const Description = styled.p`\n  font-size: 12px;\n`;\n\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useRef, useCallback } from 'react';\nimport { getAllHotels, getSpecificHotels } from '../../api';\nimport { arrCountryName, countryDic } from '../../constants/filterData';\nimport useHttp from '../../hooks/useHttp';\nimport {\n  Container,\n  FilterCont,\n  FilterForm,\n  Searchbar,\n  Select,\n  Option,\n  GridCont,\n  Description,\n  DetailCont,\n  Image,\n  Item,\n  Name\n} from './styles';\n\nconst HotelFilter = () => {\n  const [countrySelect, setCountrySelect] = useState('全台');\n  const [searchValue, setSearchValue] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const callAPI = async (filterData, searchParam) => {\n    let resp = [];\n\n    if (filterData === '全台') {\n      resp = await getAllHotels(searchParam.toString());\n    } else {\n      resp = await getSpecificHotels(countryDic[filterData], searchParam.toString());\n    }\n    return resp;\n  };\n\n  const {\n    data: hotels,\n    hasMore,\n    loading,\n    error\n  } = useHttp(searchValue, countrySelect, pageNumber, callAPI);\n\n  const observer = useRef();\n  const lastHotelsElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  const handleSearch = e => {\n    setSearchValue(e.target.value);\n    setPageNumber(1);\n  };\n\n  const handleFilter = e => {\n    setCountrySelect(e.target.value);\n    setPageNumber(1);\n  };\n\n  const renderHotels = () => (\n    hotels.map((item, index) => {\n      if (item?.Picture?.PictureUrl1.includes('210.69')) return;\n      let description = item?.Description?.length > 50 ? (item?.Description?.slice(0, 50) ?? '') + '...' : item?.Description;\n\n      return (\n        <Item ref={hotels.length - 3 === index ? lastHotelsElementRef : null} key={item.ID}>\n          <Image src={item.Picture.PictureUrl1} alt={item.Picture.PictureDescription1} />\n          <DetailCont>\n            <Name>{item?.Name?.replaceAll('.', '')}</Name>\n            <Description >{description}</Description>\n          </DetailCont>\n        </Item>\n      );\n    })\n  );\n\n  return (\n    <Container>\n      <FilterCont>\n        <FilterForm >\n          <Searchbar type=\"text\" value={searchValue} onChange={e => handleSearch(e)} />\n          <Select value={countrySelect} onChange={e => handleFilter(e)}>\n            {arrCountryName.map((item, index) => <Option key={index} value={item}>{item}</Option>)}\n          </Select>\n        </FilterForm>\n      </FilterCont>\n      <GridCont>\n        {renderHotels()}\n      </GridCont>\n    </Container>\n  );\n};\n\nexport default HotelFilter;\n","import styled from 'styled-components/macro';\n\nexport const Container = styled.div`\n  padding: 3% 5%;\n`;\n\nexport const FilterCont = styled.div`\n  display: flex;\n  padding: 10px;\n  justify-content: center;\n`;\n\nexport const FilterForm = styled.form`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Searchbar = styled.input`\n  background-color: white;\n`;\n\nexport const Select = styled.select`\n  margin-left: 10px;\n`;\n\nexport const Option = styled.option`\n  margin-left: 10px;\n`;\n\nexport const GridCont = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(15rem, 1fr));\n  margin: 3% 0px;\n  grid-gap: 30px;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: repeat(1, minmax(15rem, 1fr));\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: gray;\n`;\n\nexport const Image = styled.img`\n  align-self: center;\n  width: 40%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const DetailCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  padding: 20px;\n`;\n\nexport const Name = styled.h1`\n  margin-bottom: 30px;\n  font-size: 16px;\n`;\n\nexport const Time = styled.text`\n  color: '#ff5d0e';\n`;\n\nexport const Description = styled.p`\n  font-size: 12px;\n`;\n\n","import React, { useState, useRef, useCallback } from 'react';\nimport { getAllActivities, getSpecificActivities } from '../../api';\nimport { arrCountryName, countryDic } from '../../constants/filterData';\nimport useHttp from '../../hooks/useHttp';\nimport {\n  Container,\n  FilterCont,\n  FilterForm,\n  Searchbar,\n  Select,\n  Option,\n  GridCont,\n  Description,\n  DetailCont,\n  Image,\n  Item,\n  Name\n} from './styles';\n\nconst ActivitiesSection = () => {\n  const [countrySelect, setCountrySelect] = useState('全台');\n  const [searchValue, setSearchValue] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const callAPI = async (filterData, searchParam) => {\n    let resp = [];\n\n    if (filterData === '全台') {\n      resp = await getAllActivities(searchParam.toString());\n    } else {\n      resp = await getSpecificActivities(countryDic[filterData], searchParam.toString());\n    }\n    return resp;\n  };\n\n  const {\n    data: activities,\n    hasMore,\n    loading,\n    // error\n  } = useHttp(searchValue, countrySelect, pageNumber, callAPI);\n\n  const observer = useRef();\n  const lastActivitiesElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  const handleSearch = e => {\n    setSearchValue(e.target.value);\n    setPageNumber(1);\n  };\n\n  const handleFilter = e => {\n    setCountrySelect(e.target.value);\n    setPageNumber(1);\n  };\n\n  const renderActivities = () => (\n    activities.map((item, index) => {\n      if (item?.Picture?.PictureUrl1.includes('210.69')) return;\n\n      let description = item?.Description?.length > 50 ? (item?.Description?.slice(0, 50) ?? '') + '...' : item?.Description;\n      // let duration = (new Date(item.StartTime))\n\n      return (\n        <Item ref={activities.length - 3 === index ? lastActivitiesElementRef : null} key={item.ID}>\n          <Image src={item.Picture.PictureUrl1} alt={item.Picture.PictureDescription1} />\n          <DetailCont>\n            <Name>{item?.Name?.replaceAll('.', '')}</Name>\n            <Description >{description}</Description>\n          </DetailCont>\n        </Item>\n      );\n    })\n  );\n\n  return (\n    <Container>\n      <FilterCont>\n        <FilterForm >\n          <Searchbar type=\"text\" value={searchValue} onChange={e => handleSearch(e)} />\n          <Select value={countrySelect} onChange={e => handleFilter(e)}>\n            {arrCountryName.map((item, index) => <Option key={index} value={item}>{item}</Option>)}\n          </Select>\n        </FilterForm>\n      </FilterCont>\n      <GridCont>\n        {renderActivities()}\n      </GridCont>\n    </Container>\n  );\n};\n\nexport default ActivitiesSection;\n","import styled from 'styled-components/macro';\n\nexport const Container = styled.div`\n  padding: 3% 5%;\n`;\n\nexport const FilterCont = styled.div`\n  display: flex;\n  padding: 10px;\n  justify-content: center;\n`;\n\nexport const FilterForm = styled.form`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Searchbar = styled.input`\n  background-color: white;\n`;\n\nexport const Select = styled.select`\n  margin-left: 10px;\n`;\n\nexport const Option = styled.option`\n  margin-left: 10px;\n`;\n\nexport const GridCont = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(15rem, 1fr));\n  margin: 3% 0px;\n  grid-gap: 30px;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: repeat(1, minmax(15rem, 1fr));\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: gray;\n`;\n\nexport const Image = styled.img`\n  align-self: center;\n  width: 40%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const DetailCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  padding: 20px;\n`;\n\nexport const Name = styled.h1`\n  margin-bottom: 30px;\n  font-size: 16px;\n`;\n\nexport const Time = styled.text`\n  color: '#ff5d0e';\n`;\n\nexport const Description = styled.p`\n  font-size: 12px;\n`;\n\n","import React, { useState, useRef, useCallback } from 'react';\nimport { getAllRestaurant, getSpecificRestaurant } from '../../api';\nimport { arrCountryName, countryDic } from '../../constants/filterData';\nimport useHttp from '../../hooks/useHttp';\nimport {\n  Container,\n  FilterCont,\n  FilterForm,\n  Searchbar,\n  Select,\n  Option,\n  GridCont,\n  Description,\n  DetailCont,\n  Image,\n  Item,\n  Name\n} from './styles';\n\nconst RestaurantSection = () => {\n  const [countrySelect, setCountrySelect] = useState('全台');\n  const [searchValue, setSearchValue] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const callAPI = async (filterData, searchParam) => {\n    let resp = [];\n\n    if (filterData === '全台') {\n      resp = await getAllRestaurant(searchParam.toString());\n    } else {\n      resp = await getSpecificRestaurant(countryDic[filterData], searchParam.toString());\n    }\n    return resp;\n  };\n\n  const {\n    data: restaurant,\n    hasMore,\n    loading,\n    // error\n  } = useHttp(searchValue, countrySelect, pageNumber, callAPI);\n\n  const observer = useRef();\n  const lastRestaurantElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  const handleSearch = e => {\n    setSearchValue(e.target.value);\n    setPageNumber(1);\n  };\n\n  const handleFilter = e => {\n    setCountrySelect(e.target.value);\n    setPageNumber(1);\n  };\n\n  const renderRestaurant = () => (\n    restaurant.map((item, index) => {\n      if (item?.Picture?.PictureUrl1.includes('210.69')) return;\n\n      let description = item?.Description?.length > 50 ? (item?.Description?.slice(0, 50) ?? '') + '...' : item?.Description;\n\n      return (\n        <Item ref={restaurant.length - 3 === index ? lastRestaurantElementRef : null} key={item.ID}>\n          <Image src={item.Picture.PictureUrl1} alt={item.Picture.PictureDescription1} />\n          <DetailCont>\n            <Name>{item?.Name?.replaceAll('.', '')}</Name>\n            <Description >{description}</Description>\n          </DetailCont>\n        </Item>\n      );\n    })\n  );\n\n  return (\n    <Container>\n      <FilterCont>\n        <FilterForm >\n          <Searchbar type=\"text\" value={searchValue} onChange={e => handleSearch(e)} />\n          <Select value={countrySelect} onChange={e => handleFilter(e)}>\n            {arrCountryName.map((item, index) => <Option key={index} value={item}>{item}</Option>)}\n          </Select>\n        </FilterForm>\n      </FilterCont>\n      <GridCont>\n        {renderRestaurant()}\n      </GridCont>\n    </Container>\n  );\n};\n\nexport default RestaurantSection;\n","import React from 'react';\nimport { ActivitiesSection } from '../components';\n\nconst Activity = () => {\n  return (\n    <ActivitiesSection />\n  );\n};\n\nexport default Activity;","import React from 'react';\nimport { HotelFilter } from '../components';\n\nconst Hotels = () => {\n  return (\n    <HotelFilter />\n  );\n};\n\nexport default Hotels;","import React from 'react';\nimport { RestaurantSection } from '../components';\n\nconst Restaurant = () => {\n  return (\n    <>\n      <RestaurantSection />\n    </>\n  );\n};\n\nexport default Restaurant;\n","import { FilterSection } from '../components';\nimport React from 'react';\n\nconst ScenicSpots = () => {\n  return (\n    <>\n      <FilterSection />\n    </>\n  );\n};\n\nexport default ScenicSpots;","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { Layout } from './components';\nimport Activity from './containers/Activity';\nimport Hotels from './containers/Hotels';\nimport Restaurant from './containers/Restaurant';\n\nimport ScenicSpots from './containers/ScenicSpots';\n\nfunction App() {\n  return (\n    <Layout>\n      <Routes>\n        <Route path='YoTW' element={<ScenicSpots />} />\n        <Route path='scenicSpots' element={<ScenicSpots />} />\n        <Route path='hotels' element={<Hotels />} />\n        <Route path='activities' element={<Activity />} />\n        <Route path='restaurant' element={<Restaurant />} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  *, *:before, *:after {\n    box-sizing: border-box;\n  }\n  html, body {\n    height: 100%;\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: #282631;\n    /* color: #C7C3C0; */\n    font-size: 16px;\n  }\n`;\n\nexport const ResetStyle = createGlobalStyle`\n  html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    vertical-align: baseline;\n    box-sizing: border-box;\n  }\n  address, caption, cite, code, dfn, em, strong, th, var, b {\n    font-weight: normal;\n    font-style: normal;\n  }\n  abbr, acronym {\n    border: 0;\n  }\n  article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  *,\n  *::after,\n  *::before {\n    margin: 0;\n    padding: 0;\n    box-sizing: inherit;\n  }\n  html {\n    text-size-adjust: 100%;\n    box-sizing: border-box;\n  }\n  body {\n      line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote {\n    &:before,   &:after {\n      content: '';\n      content: none;\n    }\n  }\n  q {\n    &:before,   &:after {\n      content: '';\n      content: none;\n    }\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  caption, th {\n    text-align: left;\n  }\n  textarea {\n    resize: none;\n  }\n  a {\n    text-decoration: none;\n    cursor: pointer;\n  }\n  button {\n    padding: 0;\n    border: none;\n    background: none;\n  }\n  input, textarea {\n    all: unset;\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ResetStyle, GlobalStyles } from './global-styles';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ResetStyle />\n    <GlobalStyles />\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}