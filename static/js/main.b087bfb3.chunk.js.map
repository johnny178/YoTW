{"version":3,"sources":["api.js","constants/filterData.js","components/FilterSection/styles.js","components/FilterSection/index.js","containers/ScenicSpots.js","App.js","global-styles.js","index.js"],"names":["getScenicSpots","axios","create","baseURL","headers","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","getHMAC","getAuthorizationHeader","getAllScenicSpots","searchParam","get","getSpecificScenicSpots","area","countryDic","arrCountryName","Container","styled","div","FilterCont","FilterForm","form","Searchbar","input","Select","select","Option","option","GridCont","Item","Image","img","DetailCont","Name","h1","Description","p","FilterSection","useState","scenicSpotsData","setScenicSpotsData","countrySelect","setCountrySelect","searchValue","setSearchValue","useEffect","callApi","a","getScenicSpotsData","inputDelay","setTimeout","console","log","clearTimeout","filterName","length","URLSearchParams","toString","resp","data","type","value","onChange","e","target","map","item","index","Picture","PictureUrl1","includes","src","alt","PictureDescription1","replaceAll","DescriptionDetail","slice","ID","ScenicSpots","App","GlobalStyles","createGlobalStyle","ResetStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b087bfb3.chunk.js","sourcesContent":["import axios from 'axios';\nimport jsSHA from 'jssha';\n\nconst getAuthorizationHeader = () => {\n  //  填入自己 ID、KEY 開始\n  let AppID = '79b1459ffeca4aabadd35e191c8fed59';\n  let AppKey = 'zvSZkHtUt4JieFWkdnOyW4iGtt4';\n  //  填入自己 ID、KEY 結束\n  let GMTString = new Date().toGMTString();\n  let ShaObj = new jsSHA('SHA-1', 'TEXT');\n  ShaObj.setHMACKey(AppKey, 'TEXT');\n  ShaObj.update('x-date: ' + GMTString);\n  let HMAC = ShaObj.getHMAC('B64');\n  // eslint-disable-next-line no-useless-escape\n  let Authorization = 'hmac username=\\\"' + AppID + '\\\", algorithm=\\\"hmac-sha1\\\", headers=\\\"x-date\\\", signature=\\\"' + HMAC + '\\\"';\n  return { 'Authorization': Authorization, 'X-Date': GMTString };\n};\n\n//觀光景點相關\nconst getScenicSpots = axios.create({\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot',\n  headers: getAuthorizationHeader(),\n});\n\n//觀光景點相關\nexport const getAllScenicSpots = searchParam => getScenicSpots.get(searchParam ? `?${searchParam}` : '');\nexport const getSpecificScenicSpots = (area, searchParam = '') => getScenicSpots.get(`/${area}?${searchParam}`);","export const countryDic = {\n  '全台': '',\n  '臺北市': 'Taipei',\n  '新北市': 'NewTaipei',\n  '桃園市': 'Taoyuan',\n  '臺中市': 'Taichung',\n  '臺南市': 'Tainan',\n  '高雄市': 'Kaohsiung',\n  '基隆市': 'Keelung',\n  '新竹市': 'Hsinchu',\n  '新竹縣': 'HsinchuCounty',\n  '苗栗縣': 'MiaoliCounty',\n  '彰化縣': 'ChanghuaCounty',\n  '南投縣': 'NantouCounty',\n  '雲林縣': 'YunlinCounty',\n  '嘉義縣': 'ChiayiCounty',\n  '嘉義市': 'Chiayi',\n  '屏東縣': 'PingtungCounty',\n  '宜蘭縣': 'YilanCounty',\n  '花蓮縣': 'HualienCounty',\n  '臺東縣': 'TaitungCounty',\n  '金門縣': 'KinmenCounty',\n  '澎湖縣': 'PenghuCounty',\n  '連江縣': 'LienchiangCounty',\n};\n\nexport const arrCountryName = [\n  '全台',\n  '臺北市',\n  '新北市',\n  '桃園市',\n  '臺中市',\n  '臺南市',\n  '高雄市',\n  '基隆市',\n  '新竹市',\n  '新竹縣',\n  '苗栗縣',\n  '彰化縣',\n  '南投縣',\n  '雲林縣',\n  '嘉義縣',\n  '嘉義市',\n  '屏東縣',\n  '宜蘭縣',\n  '花蓮縣',\n  '臺東縣',\n  '金門縣',\n  '澎湖縣',\n  '連江縣',\n];","import styled from 'styled-components/macro';\n\nexport const Container = styled.div`\n  padding: 3% 5%;\n`;\n\nexport const FilterCont = styled.div`\n  display: flex;\n  padding: 10px;\n  justify-content: center;\n`;\n\nexport const FilterForm = styled.form`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Searchbar = styled.input`\n  background-color: white;\n`;\n\nexport const Select = styled.select`\n  margin-left: 10px;\n`;\n\nexport const Option = styled.option`\n  margin-left: 10px;\n`;\n\nexport const GridCont = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));\n  margin: 3% 0px;\n  grid-gap: 30px;\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: gray;\n`;\n\nexport const Image = styled.img`\n  object-fit: contain;\n  max-width: 40%;\n  height: auto;\n  align-self: center;\n`;\n\nexport const DetailCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  padding: 20px;\n`;\n\nexport const Name = styled.h1`\n  margin-bottom: 30px;\n  font-size: 16px;\n`;\n\nexport const Description = styled.p`\n  font-size: 12px;\n`;\n\n","import React, { useState, useEffect } from 'react';\nimport { getAllScenicSpots, getSpecificScenicSpots } from '../../api';\nimport { arrCountryName, countryDic } from '../../constants/filterData';\nimport {\n  Container,\n  FilterCont,\n  FilterForm,\n  Searchbar,\n  Select,\n  Option,\n  GridCont,\n  Description,\n  DetailCont,\n  Image,\n  Item,\n  Name\n} from './styles';\n\nconst FilterSection = () => {\n  const [scenicSpotsData, setScenicSpotsData] = useState([]);\n  const [countrySelect, setCountrySelect] = useState('全台');\n  const [searchValue, setSearchValue] = useState('');\n\n  useEffect(() => {\n    const callApi = async () => {\n      getScenicSpotsData();\n    };\n    callApi();\n  }, [countrySelect]);\n\n  useEffect(() => {\n    const inputDelay = setTimeout(() => {\n      console.log(searchValue);\n      getScenicSpotsData(searchValue);\n    }, 1000);\n\n    return () => {\n      clearTimeout(inputDelay);\n    };\n  }, [searchValue]);\n\n  const getScenicSpotsData = async (searchValue = '') => {\n    let filterName = searchValue.length !== 0 ? ` and contains(NAME,'${searchValue}')` : '';\n    let searchParam = new URLSearchParams([\n      ['$top', 50],\n      ['$filter', `Picture/PictureUrl1 ne null${filterName}`],\n      ['$format', 'JSON'],\n    ]);\n\n    // searchValue.length !== 0 && searchParam.set('$filter', `contains(NAME,'${searchValue}')`);\n    let resp = countrySelect === '全台' ?\n      await getAllScenicSpots(searchParam.toString()) :\n      await getSpecificScenicSpots(countryDic[countrySelect], searchParam.toString());\n    setScenicSpotsData(resp.data);\n  };\n\n  const renderScenicSpots = () => (\n    scenicSpotsData.map(item => {\n      if (item?.Picture?.PictureUrl1.includes('210.69')) return;\n      return (\n        <Item key={item.ID}>\n          <Image src={item.Picture.PictureUrl1} alt={item.Picture.PictureDescription1} />\n          <DetailCont>\n            <Name>{item?.Name?.replaceAll('.', '')}</Name>\n            <Description >{(item?.DescriptionDetail?.slice(0, 50) ?? '') + '...'}</Description>\n          </DetailCont>\n        </Item>\n      );\n    })\n  );\n\n  return (\n    <Container>\n      <FilterCont>\n        <FilterForm >\n          <Searchbar type=\"text\" value={searchValue} onChange={e => setSearchValue(e.target.value)} />\n          <Select value={countrySelect} onChange={e => setCountrySelect(e.target.value)}>\n            {arrCountryName.map((item, index) => <Option key={index} value={item}>{item}</Option>)}\n          </Select>\n        </FilterForm>\n      </FilterCont>\n      <GridCont>\n        {renderScenicSpots()}\n      </GridCont>\n    </Container>\n  );\n};\n\nexport default FilterSection;\n","import { FilterSection } from '../components';\nimport React from 'react';\n\nconst ScenicSpots = () => {\n  return (\n    <>\n      <FilterSection />\n    </>\n  );\n};\n\nexport default ScenicSpots;","import React from 'react';\nimport ScenicSpots from './containers/ScenicSpots';\n\nfunction App() {\n  return (\n    <ScenicSpots />\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  *, *:before, *:after {\n    box-sizing: border-box;\n  }\n  html, body {\n    height: 100%;\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: #282631;\n    /* color: #C7C3C0; */\n    font-size: 16px;\n  }\n`;\n\nexport const ResetStyle = createGlobalStyle`\n  html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    vertical-align: baseline;\n    box-sizing: border-box;\n  }\n  address, caption, cite, code, dfn, em, strong, th, var, b {\n    font-weight: normal;\n    font-style: normal;\n  }\n  abbr, acronym {\n    border: 0;\n  }\n  article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  *,\n  *::after,\n  *::before {\n    margin: 0;\n    padding: 0;\n    box-sizing: inherit;\n  }\n  html {\n    text-size-adjust: 100%;\n    box-sizing: border-box;\n  }\n  body {\n      line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote {\n    &:before,   &:after {\n      content: '';\n      content: none;\n    }\n  }\n  q {\n    &:before,   &:after {\n      content: '';\n      content: none;\n    }\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  caption, th {\n    text-align: left;\n  }\n  textarea {\n    resize: none;\n  }\n  a {\n    text-decoration: none;\n    cursor: pointer;\n  }\n  button {\n    padding: 0;\n    border: none;\n    background: none;\n  }\n  input, textarea {\n    all: unset;\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ResetStyle, GlobalStyles } from './global-styles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ResetStyle />\n    <GlobalStyles />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}